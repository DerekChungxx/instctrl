{"version":3,"sources":["../../src/dev/devSerialPort.js"],"names":["SerialPort","require","port","autoOpen","devOpen","open","err","console","log","message","write","on","data","toString"],"mappings":";;;;;AAAA,IAAMA,aAAaC,QAAQ,YAAR,CAAnB;;AAEA,IAAMC,OAAO,IAAIF,UAAJ,CAAe,cAAf,EAA+B,EAAEG,UAAU,KAAZ,EAA/B,CAAb;;AAEA,SAASC,OAAT,GAAmB;AACjBF,OAAKG,IAAL,CAAU,UAACC,GAAD,EAAS;AACjB,QAAIA,GAAJ,EAAS;AACP,aAAOC,QAAQC,GAAR,CAAY,sBAAZ,EAAoCF,IAAIG,OAAxC,CAAP;AACD;;AAED;AACAP,SAAKQ,KAAL,CAAW,WAAX;AACA,WAAO,IAAP;AACD,GARD;;AAUA;AACAR,OAAKS,EAAL,CAAQ,MAAR,EAAgB,YAAM;AACpB;AACAJ,YAAQC,GAAR,CAAY,cAAZ;AACD,GAHD;;AAKAN,OAAKS,EAAL,CAAQ,MAAR,EAAgB,UAACC,IAAD,EAAU;AACxBL,YAAQC,GAAR,CAAYI,KAAKC,QAAL,EAAZ;AACD,GAFD;AAGD;;kBAEcT,O","file":"devSerialPort.js","sourcesContent":["const SerialPort = require('serialport');\n\nconst port = new SerialPort('/dev/ttyACM0', { autoOpen: false });\n\nfunction devOpen() {\n  port.open((err) => {\n    if (err) {\n      return console.log('Error opening port: ', err.message);\n    }\n\n    // Because there's no callback to write, write errors will be emitted on the port:\n    port.write('*idn?\\r\\n');\n    return true;\n  });\n\n  // The open event is always emitted\n  port.on('open', () => {\n    // open logic\n    console.log('open ttyACM0');\n  });\n\n  port.on('data', (data) => {\n    console.log(data.toString());\n  });\n}\n\nexport default devOpen;\n\n"]}