{"version":3,"sources":["../../src/dev/serialDev.js"],"names":["serialDevSearch"],"mappings":";;;;;AAAA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASA,eAAT,GAA2B;AACzB;AACD;kBACcA,e","file":"serialDev.js","sourcesContent":["/* eslint class-methods-use-this: \"off\" */\n// const fs = require('fs');\n// const SerialPort = require('serialport');\n\n\n// const supportedPort = ['/dev/ttyACM0', '/dev/ttyACM1'];\n// const port = new SerialPort('/dev/ttyACM0', { autoOpen: false });\n\n// function devOpen(devName) {\n//   const port = new SerialPort(devName);\n//   const usbInstrument = new UsbInst(port);\n\n\n//   // port.open((err) => {\n//   //   if (err) {\n//   //     return console.log('Error opening port: ', err.message);\n//   //   }\n\n//   //   // Because there's no callback to write, write errors will be emitted on the port:\n//   //   port.write('*idn?\\r\\n');\n//   //   return true;\n//   // });\n\n//   // port.on('data', (data) => {\n//   //   console.log('2');\n//   //   console.log(data.toString());\n//   //   // port.close();\n//   // });\n\n//   usbInstrument.openUsb1();\n//   usbInstrument.port.write('*idn?\\r\\n');\n//   setTimeout(usbInstrument.closeUsb1, 5000);\n//   setTimeout(usbInstrument.openUsb2, 10000);\n//   setTimeout(usbInstrument.writeout, 15000);\n// }\n\n\nfunction serialDevSearch() {\n  // devOpen(supportedPort[0]);\n}\nexport default serialDevSearch;\n\n"]}